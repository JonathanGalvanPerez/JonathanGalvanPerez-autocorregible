{"version":3,"sources":["components/utils/ProgressBar.jsx","components/home/TeamStats.jsx","features/team/teamSlice.js","services/alertService.js","components/statsCard/StatsCard.jsx","components/home/Home.jsx","components/heroCard/HeroCard.jsx","app/config.js","services/httpRequestService.js","components/search/SearchBar.jsx","components/search/Search.jsx","components/heroDetail/HeroDetail.jsx","routes/MainRoutes.js","features/login/loginSlice.js","components/header/Navbar.jsx","pages/MainPage.jsx","components/login/LoginForm.jsx","pages/LoginPage.jsx","routes/AppRoutes.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["colors","intelligence","strength","speed","durability","power","combat","ProgressBar","value","name","progress","style","width","backgroundColor","className","role","aria-valuemin","aria-valuemax","TeamStats","team","useSelector","state","orderedStats","stats","sort","a","b","meanHeight","heroes","length","totalHeight","toFixed","meanWeight","totalWeight","backgroundImage","backgroundSize","backgroundPosition","map","stat","height","createSlice","initialState","reducers","addHero","action","hero","payload","find","item","id","push","index","findIndex","teamStat","powerstats","Number","weight","deleteHero","splice","deleted","actions","Alert","success","title","text","confirmButtonText","Swal","fire","icon","error","confirm","showCancelButton","cancelButtonText","reverseButtons","then","result","isConfirmed","StatsCard","dispatch","useDispatch","src","image","url","alt","objectFit","Object","keys","key","as","to","onClick","Home","console","log","HeroCard","included","useState","added","setAdded","HERO_API_URL","PROXY_URL","RequestService","login","values","axios","post","data","searchHero","query","get","results","appearance","replace","getHero","response","aliases","biography","workplace","work","base","eyeColor","hairColor","SearchBar","onSearch","setLoading","setQuery","searchButtonHandler","type","placeholder","onChange","event","target","onKeyUp","code","Search","setData","loading","aria-hidden","HeroDetail","useParams","setHero","useEffect","join","MainRoutes","exact","path","component","createAsyncThunk","thunkApi","RequestServices","loginSlice","token","JSON","parse","localStorage","getItem","currentRequestId","logout","extraReducers","fulfilled","meta","requestId","pending","rejected","isLoggedIn","isLoading","Navbar","MainPage","LoginForm","onSubmit","_isLoading","validationSchema","Yup","email","required","password","initialValues","field","form","htmlFor","errors","touched","LoginPage","history","useHistory","ProtectedRoute","props","AppRoutes","backgroundAttachment","minHeight","App","store","configureStore","reducer","loginReducer","teamReducer","window","onbeforeunload","setItem","stringify","getState","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3265d721.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst colors = {\r\n    intelligence: \"#3c096c\",\r\n    strength: \"#40916c\",\r\n    speed: \"#0466c8\",\r\n    durability: \"black\",\r\n    power: \"#c1121f\",\r\n    combat: \"#fca311\",\r\n}\r\n\r\nexport default function ProgressBar({ value, name }) {\r\n    const progress = value === \"null\" ? 0 : value + \"%\";\r\n    const style = name? {width: progress, backgroundColor: colors[name]} : { width: progress };\r\n    return (\r\n        <div style={style} className=\"progress-bar progress-bar-striped\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\">{name? name : progress}</div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ProgressBar from './../utils/ProgressBar';\r\n\r\nexport default function TeamStats() {\r\n    const team = useSelector(state => state.team);\r\n    const orderedStats = [...team.stats].sort((a, b) => b.value - a.value);\r\n    const meanHeight = (team.heroes.length === 0) ? 0 : (team.totalHeight / team.heroes.length).toFixed(2);\r\n    const meanWeight = (team.heroes.length === 0) ? 0 : (team.totalWeight / team.heroes.length).toFixed(2);\r\n\r\n    const backgroundStyle = {\r\n        backgroundImage: \"url(/images/comic-background-stats.jpg)\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\"\r\n    }\r\n    \r\n    return (\r\n        <div className=\"col-12 col-xl-10 my-2 py-3 mx-auto rounded-md shadow\" style={backgroundStyle}>\r\n            <ol className=\"row justify-content-around\">\r\n                {orderedStats.map((stat) => (\r\n                    <li className=\"col-6 col-md-4 col-lg-2 mb-2\" key={stat.name}>\r\n                        <div className=\"bg-light rounded-pill py-2\">\r\n                        <strong>{stat.name}: </strong>{stat.value}\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <div className=\"progress rounded-xs\" style={{height: \"25px\"}}>\r\n                {orderedStats.map((stat) => (\r\n                    <ProgressBar value={stat.value} name={stat.name} key={stat.name}/>\r\n                ))}\r\n            </div>\r\n            <div className=\"row row-cols-1 row-cols-md-2 mt-2\">\r\n                <div className=\"col mb-2 mb-md-0\">\r\n                    <div className=\"bg-light rounded-pill py-2\">\r\n                        <strong>Altura Promedio: </strong>{meanHeight} cm\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"bg-light rounded-pill py-2\">\r\n                        <strong>Peso Promedio: </strong>{meanWeight} kg\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst team = createSlice({\r\n    name: 'team',\r\n    initialState: {\r\n        heroes: [],\r\n        stats: [\r\n            { name: 'intelligence', value: 0 },\r\n            { name: 'strength', value: 0 },\r\n            { name: 'speed', value: 0 },\r\n            { name: 'durability', value: 0 },\r\n            { name: 'power', value: 0 },\r\n            { name: 'combat', value: 0 },\r\n        ],\r\n        totalHeight: 0,\r\n        totalWeight: 0\r\n    },\r\n    reducers: {\r\n        addHero: (state, action) => {\r\n            const hero = action.payload;\r\n            if(state.heroes.find(item => item.id === hero.id))\r\n                return;\r\n            state.heroes.push(hero);\r\n            for(const stat in hero.powerstats) {\r\n                const index = state.stats.findIndex(teamStat => teamStat.name === stat);\r\n                if(hero.powerstats[stat] !== \"null\")\r\n                    state.stats[index].value += Number(hero.powerstats[stat]);\r\n            }\r\n            if(hero.height !== \"null\" )\r\n                state.totalHeight += Number(hero.height);\r\n            if(hero.weight !== \"null\" )\r\n                state.totalWeight += Number(hero.weight);\r\n        },\r\n        deleteHero: (state, action) => {\r\n            const id = action.payload;\r\n            const index = state.heroes.findIndex(hero => hero.id === id);\r\n            if(index !== -1) {\r\n                let [deleted] = state.heroes.splice(index, 1);\r\n                for(const stat in deleted.powerstats) {\r\n                    const index = state.stats.findIndex(teamStat => teamStat.name === stat);\r\n                    const value = deleted.powerstats[stat];\r\n                    if(value !== \"null\")\r\n                        state.stats[index].value -= Number(value);\r\n                }\r\n                if(deleted.height !== \"null\" )\r\n                    state.totalHeight -= Number(deleted.height);\r\n                if(deleted.weight !== \"null\" )\r\n                    state.totalWeight -= Number(deleted.weight);\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const { addHero, deleteHero } = team.actions;\r\nexport default team.reducer;","import Swal from 'sweetalert2';\r\n\r\nconst success = (title, text, confirmButtonText = 'OK') => {\r\n    Swal.fire({\r\n        title,\r\n        text,\r\n        icon: 'success',\r\n        confirmButtonText\r\n    });\r\n}\r\n\r\nconst error = (title, text, confirmButtonText = 'Volver') => {\r\n    Swal.fire({\r\n        title,\r\n        text,\r\n        icon: 'error',\r\n        confirmButtonText\r\n    });\r\n}\r\n\r\nconst confirm = async (title, text, confirmButtonText = 'Seguro', doneText = 'Hecho') => {\r\n    return Swal.fire({\r\n        title,\r\n        text,\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText,\r\n        cancelButtonText: 'Cancelar',\r\n        reverseButtons: true\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return true;\r\n        } else\r\n            return false;\r\n    })\r\n}\r\n\r\nconst Alert = {\r\n    success,\r\n    error,\r\n    confirm\r\n}\r\n\r\nexport default Alert;","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteHero } from '../../features/team/teamSlice'\r\nimport Alert from '../../services/alertService';\r\nimport { Link } from 'react-router-dom';\r\nimport ProgressBar from '../utils/ProgressBar';\r\n\r\nexport default function StatsCard({ hero }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteButtonHandler = () => {\r\n        dispatch(deleteHero(hero.id));\r\n        Alert.success('Listo', 'Se ha eliminido al superheroe de su equipo')\r\n    }\r\n\r\n    const imageStyle = {\r\n        height: \"320px\",\r\n        objectFit: \"cover\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-lg-4 col-xl-3 p-1\">\r\n            <div className=\"alkemy-card rounded-lg overflow-hidden\">\r\n                <img className=\"card-img-top\" src={hero.image.url} alt=\"Superheroe\" style={imageStyle} />\r\n                <div className=\"card-body py-2\">\r\n                    <h5 className=\"card-title m-0\">{hero.name}</h5>\r\n                    <ul className=\"card-text my-2\">\r\n                        {Object.keys(hero.powerstats).map((key) => (\r\n                            <li key={key}><strong>{key}</strong>: \r\n                                <div className=\"progress\" style={{height: \"12px\"}}>\r\n                                    <ProgressBar value={hero.powerstats[key]} />\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <Link as=\"button\" to={`/hero/${hero.id}`} className=\"alkemy-btn-success mr-2\">Detalles</Link>\r\n                    <button onClick={deleteButtonHandler} className=\"alkemy-btn-danger\">Eliminar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport TeamStats from './TeamStats';\r\nimport StatsCard from './../statsCard/StatsCard';\r\n\r\nexport default function Home() {\r\n    const team = useSelector(state => state.team.heroes);\r\n    console.log('Team: ', team);\r\n    return (\r\n        <div>\r\n            <h2 className=\"jumbotron m-0\">Tu equipo de superheroes</h2>\r\n            <div className=\"d-flex flex-nowrap overflow-auto scrollable\">\r\n                {team.length === 0 ?\r\n                    <h5 className=\"mx-auto my-4\">No hay ningun superheroe en su equipo</h5>\r\n                :\r\n                    team.map(hero => (\r\n                        <StatsCard hero={hero} key={hero.id} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <TeamStats />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addHero } from '../../features/team/teamSlice';\r\n\r\nexport default function HeroCard({ hero, included }) {\r\n    const dispatch = useDispatch();\r\n    const [added, setAdded] = useState(included);\r\n    const addButtonhandler = () => {\r\n        if(!added){\r\n            dispatch(addHero(hero));\r\n            setAdded(true);\r\n        }\r\n    }\r\n\r\n    const imageStyle = {\r\n        height: \"320px\",\r\n        objectFit: \"cover\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"col p-1\">\r\n            <div className=\"alkemy-card rounded-xs overflow-hidden\">\r\n                <img className=\"card-img-top\" src={hero.image.url} alt=\"Superhero\" style={imageStyle} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{hero.name}</h5>\r\n                    <button onClick={addButtonhandler} className=\"alkemy-btn-primary\">\r\n                        { added ? \"Agregado\" : \"Agregar\" }\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const HERO_ACCESS_TOKEN = \"4174620429250377\";\r\nconst PROXY_URL = \"https://thingproxy.freeboard.io/fetch/\";\r\nexport const LOGIN_API_URL = \"http://challenge-react.alkemy.org\";\r\nexport const HERO_API_URL = PROXY_URL + \"https://superheroapi.com/api/\" + HERO_ACCESS_TOKEN;","import axios from \"axios\";\r\nimport { HERO_API_URL, LOGIN_API_URL } from \"../app/config\";\r\n\r\nconst login = async (values) => {\r\n    const { data } = await axios.post(LOGIN_API_URL, values);\r\n    return data;\r\n}\r\n\r\nconst searchHero = async (query) => {\r\n    let { data } = await axios.get(`${HERO_API_URL}/search/${query}`);\r\n    if(!data.error)\r\n        data = data.results.map(hero => (\r\n            {\r\n                id: hero.id,\r\n                name: hero.name,\r\n                powerstats: hero.powerstats,\r\n                image: hero.image,\r\n                height: hero.appearance.height[1].replace( ' cm', ''),\r\n                weight: hero.appearance.weight[1].replace( ' kg', '')\r\n            }));\r\n    return data;\r\n}\r\n\r\nconst getHero = async (id) => {\r\n    let { data } = await axios.get(`${HERO_API_URL}/${id}`);\r\n    if(data.response === \"success\")\r\n        return {\r\n            name: data.name,\r\n            aliases: data.biography.aliases,\r\n            workplace: data.work.base,\r\n            height: data.appearance.height[1].replace( ' cm', ''),\r\n            weight: data.appearance.weight[1].replace( ' kg', ''),\r\n            eyeColor: data.appearance[\"eye-color\"],\r\n            hairColor: data.appearance[\"hair-color\"],\r\n            image: data.image.url\r\n        }\r\n    return data.results;\r\n}\r\n\r\nconst RequestService = {\r\n    login,\r\n    searchHero,\r\n    getHero\r\n}\r\n\r\nexport default RequestService;","import React, { useState } from 'react'\r\nimport RequestService from './../../services/httpRequestService';\r\nimport Alert from './../../services/alertService';\r\n\r\nexport default function SearchBar({ onSearch, setLoading }) {\r\n    const [query, setQuery] = useState('');\r\n    const searchButtonHandler = async () => {\r\n        setLoading(true);\r\n        const result = await RequestService.searchHero(query);\r\n        if(!result.error)\r\n            onSearch(result);\r\n        else\r\n            Alert.error('No encontrado!', 'El superheroe que buscas no se encontró en la base de datos');\r\n        setLoading(false);\r\n    }\r\n    const enterPressHandler = (event) => {\r\n        if(event.code === \"Enter\")\r\n            searchButtonHandler();\r\n    }\r\n    return (\r\n        <div className=\"input-group border rounded-pill mb-4 col-md-10 col-lg-8 p-0 mx-auto overflow-hidden\">\r\n            <input type=\"search\" className=\"alkemy-form-control pl-4 pr-2\" placeholder=\"Nombre del superheroe\"\r\n            value={query} onChange={(event) => setQuery(event.target.value)}\r\n            onKeyUp={enterPressHandler} />\r\n            <div className=\"input-group-append\">\r\n                <button type=\"button\" className=\"alkemy-btn-success m-0 d-flex align-items-center\" onClick={searchButtonHandler} >\r\n                <span className=\"material-icons\">search</span>Buscar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport HeroCard from '../heroCard/HeroCard';\r\nimport SearchBar from './SearchBar'\r\n\r\nexport default function Search() {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const team = useSelector(state => state.team.heroes);\r\n    console.log('data: ', data);\r\n    return (\r\n        <div>\r\n            <h2 className=\"jumbotron\">Ingrese el nombre del superheroe</h2>\r\n            <SearchBar onSearch={setData} setLoading={setLoading} />\r\n            {loading?\r\n                <div className=\"spinner-border alkemy-spinner mx-auto my-5\" role=\"status\" aria-hidden=\"true\"></div>\r\n            :\r\n                <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 mx-auto\">\r\n                    {data.map(hero => (\r\n                        <HeroCard hero={hero} key={hero.id} included={team.find(item => item.id === hero.id)} />\r\n                    ))}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport RequestService from './../../services/httpRequestService';\r\n\r\nexport default function HeroDetail() {\r\n    const { id } = useParams();\r\n    const [hero, setHero] = useState({});\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        RequestService.getHero(id)\r\n            .then(result => {\r\n                setHero(result);\r\n                setLoading(false);\r\n            });\r\n    }, [id])\r\n\r\n    const backgroundStyle = {\r\n        backgroundImage: \"url(/images/background-detail.jpg)\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\"\r\n    }\r\n\r\n    if(loading)\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <div className=\"spinner-border\"></div>\r\n            </div>\r\n        )\r\n    else\r\n        return (\r\n            <div className=\"d-flex flex-wrap align-items-stretch rounded shadow\" style={backgroundStyle}>\r\n                <img className=\"col-12 col-sm-6 col-lg-4 rounded p-1\" width=\"40%\" src={hero.image} alt=\"Superhero\" />\r\n                <ul className=\"col-12 col-sm-6 col-lg-8 text-left p-3 d-flex flex-column justify-content-around\">\r\n                    <li><strong>Nombre: </strong>{hero.name}</li>\r\n                    <li><strong>Alias: </strong>{hero.aliases.join(', ')}</li>\r\n                    <li><strong>Lugar de trabajo: </strong>{hero.workplace}</li>\r\n                    <li><strong>Altura: </strong>{hero.height} cm</li>\r\n                    <li><strong>Peso: </strong>{hero.weight} kg</li>\r\n                    <li><strong>Color de ojos: </strong>{hero.eyeColor}</li>\r\n                    <li><strong>Color de pelo: </strong>{hero.hairColor}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/home/Home';\r\nimport Search from '../components/search/Search';\r\nimport HeroDetail from '../components/heroDetail/HeroDetail';\r\n\r\nexport default function MainRoutes() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/search\" component={Search} />\r\n            <Route exact path=\"/hero/:id\" component={HeroDetail} />\r\n            <Redirect path=\"/**\" to=\"/home\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport RequestServices from '../../services/httpRequestService';\r\n\r\nexport const login = createAsyncThunk(\"login\", async (values, thunkApi) => {\r\n    try {\r\n        return await RequestServices.login(values);\r\n    } catch(error) {\r\n        throw error;\r\n    }\r\n});\r\n\r\nexport const loginSlice = createSlice({\r\n    name: \"login\",\r\n    initialState: {\r\n        token: JSON.parse(localStorage.getItem('token')),\r\n        currentRequestId: '',\r\n        loading: 'idle',\r\n        error: ''\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.token = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [login.fulfilled]: (state, action) => {\r\n            if (action.meta.requestId === state.currentRequestId) {\r\n                state.token = action.payload.token;\r\n                state.loading = 'idle';\r\n                state.error = '';\r\n                state.currentRequestId = '';\r\n            }\r\n        },\r\n        [login.pending]: (state, action) => {\r\n            state.currentRequestId = action.meta.requestId;\r\n            state.loading = 'pending';\r\n        },\r\n        [login.rejected]: (state, action) => {\r\n            if (action.meta.requestId === state.currentRequestId) {\r\n                state.currentRequestId = action.meta.requestId;\r\n                state.loading = 'idle';\r\n                state.error = action.error;\r\n            }\r\n        }  \r\n    }\r\n})\r\n\r\nexport const { logout } = loginSlice.actions;\r\n\r\nexport const isLoggedIn = (state) => state.login.token !== null;\r\nexport const isLoading = (state) => state.login.loading === 'pending';\r\nexport const getToken = (state) => state.login.token;\r\n\r\nexport default loginSlice.reducer;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../features/login/loginSlice';\r\n\r\nexport default function Navbar() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleLogoutButton = () => {\r\n        dispatch(logout())\r\n        console.log('deslogueado con exito');\r\n    }\r\n    return (\r\n        <nav className=\"d-flex bg-primary px-2 px-sm-3\">\r\n            <img src=\"/images/apple-touch-icon.png\" alt=\"logo icon\" height=\"50px\" className=\"rounded-md my-2 mr-2\" />\r\n            <ul className=\"nav nav-tabs bg-primary \">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/home\">Inicio</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/search\">Buscar</Link>\r\n                </li>\r\n            </ul>\r\n            <button onClick={handleLogoutButton} className=\"alkemy-btn-danger ml-auto rounded-md my-2\" >Deslogearse</button>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport MainRoutes from './../routes/MainRoutes';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoggedIn } from '../features/login/loginSlice';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/header/Navbar';\r\n\r\nexport default function MainPage() {\r\n    const _isLoggedIn = useSelector(isLoggedIn);\r\n\r\n    if(!_isLoggedIn)\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n    return (\r\n        <div className=\"container p-0\">\r\n            <Navbar />\r\n            <div className=\"p-2 bg-light\">\r\n                <MainRoutes />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './loginForm.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoading } from './../../features/login/loginSlice';\r\n\r\nexport default function LoginForm({ onSubmit }) {\r\n    const _isLoading = useSelector(isLoading);\r\n    const initialValues = { email: '', password: ''};\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Debe ser un email valido').required('Este campo es requerido'),\r\n        password: Yup.string().required('Este campo es requerido')\r\n    });\r\n    return (\r\n        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n                <div className=\"col-md-8 p-0 mx-auto\">\r\n                    <Field name=\"email\" >\r\n                        {({ field, form }) => (\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email-input\" className=\"alkemy-form-label\">Email</label>\r\n                                <input type=\"email\" className=\"alkemy-form-control\" id=\"email-input\" {...field} />\r\n                                {form.errors.email && form.touched.email &&\r\n                                    <div className=\"alkemy-alert-danger\" >{form.errors.email}</div>\r\n                                }\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"password\" >\r\n                        {({ field, form }) => (\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password-input\" className=\"alkemy-form-label\">Contraseña</label>\r\n                                <input type=\"password\" className=\"alkemy-form-control\" id=\"password-input\" {...field} />\r\n                                {form.errors.password && form.touched.password &&\r\n                                    <div className=\"alkemy-alert-danger\" >{form.errors.password}</div>\r\n                                }\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    \r\n                    <button className=\"alkemy-btn-primary\" type=\"submit\">\r\n                        {_isLoading?\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <strong className=\"mr-2\">Cargando... </strong>\r\n                                <div className=\"spinner-border alkemy-spinner\" role=\"status\" aria-hidden=\"true\"></div>\r\n                            </div>\r\n                        :\r\n                            'Iniciar Sesión'\r\n                        }\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { isLoggedIn, login } from './../features/login/loginSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport LoginForm from './../components/login/LoginForm';\r\nimport Alert from '../services/alertService';\r\n\r\nexport default function LoginPage() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const _isLoggedIn = useSelector(isLoggedIn);\r\n\r\n    const onSubmit = (values, actions) => {\r\n        dispatch(login(values))\r\n            .then((result) => {\r\n                if(result.error)\r\n                    Alert.error('No se pudo iniciar sesión', 'el email o la contraseña son incorrectos');\r\n                else {\r\n                    Alert.success('Listo', 'Ha iniciado sesion con exito');\r\n                    history.push('/');\r\n                }\r\n            })\r\n    }\r\n    if(_isLoggedIn)\r\n        return (<Redirect to=\"/home\" />)\r\n    return (\r\n        <div className=\"container my-2\">\r\n            <h1 className=\"text-white bg-primary py-4\">Inicia Sesión</h1>\r\n            <LoginForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport MainPage from '../pages/MainPage';\r\nimport LoginPage from './../pages/LoginPage';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoggedIn } from '../features/login/loginSlice';\r\n\r\nconst ProtectedRoute = (props) => {\r\n    const _isLoggedIn = useSelector(isLoggedIn);\r\n    if(!_isLoggedIn)\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n    return (\r\n        <Route {...props} />\r\n    )\r\n}\r\n\r\nexport default function AppRoutes() {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/login\" component={LoginPage} />\r\n                    <ProtectedRoute path=\"/\" component={MainPage} />\r\n                    <Redirect path=\"/**\" to=\"/\" />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport AppRoutes from './routes/AppRoutes'\n\nconst style = {\n  backgroundImage: \"url(/images/comic-background.jpg)\",\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center\",\n  backgroundAttachment: \"fixed\",\n  minHeight: \"100vh\"\n}\n\nfunction App() {\n  return (\n    <div className=\"App py-md-2\" style={style}>\n      <AppRoutes />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport loginReducer from '../features/login/loginSlice';\nimport teamReducer from '../features/team/teamSlice';\n\nexport const store = configureStore({\n  reducer: {\n    login: loginReducer,\n    team: teamReducer\n  }\n});\n\nwindow.onbeforeunload = () => {\n  localStorage.setItem('token', JSON.stringify(store.getState().login.token));\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}